<Window
    Background="{DynamicResource MaterialDesignBackground}"
    FocusManager.FocusedElement="{Binding ElementName=QueryTextBox}"
    Height="550"
    Icon="/YoutubeDownloader;component/favicon.ico"
    Style="{DynamicResource MaterialDesignRoot}"
    Width="600"
    WindowStartupLocation="CenterScreen"
    d:DataContext="{d:DesignInstance Type=viewModels:RootViewModel}"
    mc:Ignorable="d"
    x:Class="YoutubeDownloader.Views.RootView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:components="clr-namespace:YoutubeDownloader.ViewModels.Components"
    xmlns:converters="clr-namespace:YoutubeDownloader.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:viewModels="clr-namespace:YoutubeDownloader.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="Normal" ProgressValue="{Binding Progress.Current.Fraction}" />
    </Window.TaskbarItemInfo>
    <materialDesign:DialogHost
        CloseOnClickAway="True"
        SnackbarMessageQueue="{Binding Notifications}"
        Style="{DynamicResource MaterialDesignEmbeddedDialogHost}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Toolbar  -->
            <Grid Background="{DynamicResource MaterialDesignDarkBackground}" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Query and process query button  -->
                <materialDesign:Card Grid.Column="0" Margin="12,12,0,12">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--  Query  -->
                        <TextBox
                            AcceptsReturn="True"
                            BorderThickness="0"
                            FontSize="16"
                            Grid.Column="0"
                            Margin="6"
                            MaxLines="4"
                            PreviewKeyDown="QueryTextBox_OnPreviewKeyDown"
                            Text="{Binding Query, UpdateSourceTrigger=PropertyChanged}"
                            VerticalAlignment="Bottom"
                            VerticalScrollBarVisibility="Auto"
                            materialDesign:HintAssist.Hint="URL or search query (press Shift+Enter to add multiple)"
                            materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                            x:Name="QueryTextBox" />

                        <!--  Process query button  -->
                        <Button
                            Command="{s:Action ProcessQuery}"
                            Grid.Column="1"
                            IsDefault="True"
                            Margin="0,6,6,6"
                            Padding="4"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            ToolTip="Process query (Enter)">
                            <materialDesign:PackIcon
                                Height="24"
                                Kind="ArrowRight"
                                Width="24" />
                        </Button>
                    </Grid>
                </materialDesign:Card>

                <!--  Settings button  -->
                <Button
                    Command="{s:Action ShowSettings}"
                    Foreground="{DynamicResource MaterialDesignDarkForeground}"
                    Grid.Column="1"
                    Margin="6"
                    Padding="4"
                    Style="{DynamicResource MaterialDesignFlatButton}"
                    ToolTip="Settings">
                    <Button.Resources>
                        <SolidColorBrush Color="#4C4C4C" x:Key="MaterialDesignFlatButtonClick" />
                    </Button.Resources>
                    <materialDesign:PackIcon
                        Height="24"
                        Kind="Settings"
                        Width="24" />
                </Button>
            </Grid>

            <!--  Progress  -->
            <ProgressBar
                Background="{DynamicResource MaterialDesignDarkBackground}"
                Grid.Row="1"
                IsIndeterminate="{Binding IsProgressIndeterminate}"
                Value="{Binding Progress.Current.Fraction, Mode=OneWay}" />

            <!--  Content  -->
            <Grid Background="{DynamicResource MaterialDesignCardBackground}" Grid.Row="2">

                <!--  Placeholder  -->
                <TextBlock
                    FontSize="18"
                    FontWeight="Light"
                    Margin="32"
                    Text="Copy-paste URL or type in a search query to start downloading"
                    TextAlignment="Center"
                    TextWrapping="Wrap"
                    Visibility="{Binding Downloads.Count, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" />

                <!--  Downloads  -->
                <DataGrid
                    Background="{DynamicResource MaterialDesignCardBackground}"
                    ColumnWidth="Auto"
                    HorizontalScrollBarVisibility="Disabled"
                    ItemsSource="{Binding Downloads}"
                    ScrollViewer.CanContentScroll="False"
                    VerticalScrollBarVisibility="Auto"
                    Visibility="{Binding Downloads.Count, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
                            <!--  Context menu  -->
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem
                                            Command="{s:Action RemoveDownload}"
                                            CommandParameter="{Binding}"
                                            Header="Remove download" />
                                        <MenuItem Command="{s:Action RemoveInactiveDownloads}" Header="Remove all inactive downloads" />
                                        <MenuItem Command="{s:Action RemoveSuccessfulDownloads}" Header="Remove all successful downloads" />
                                        <MenuItem Command="{s:Action RestartFailedDownloads}" Header="Restart all failed downloads" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>

                            <!--  Triggers  -->
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <!--  Columns  -->
                    <DataGrid.Columns>
                        <!--  Thumbnail  -->
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type components:DownloadViewModel}">
                                    <Image
                                        Source="{Binding Request.Video, Converter={x:Static converters:VideoToLowestQualityThumbnailUrlConverter.Instance}}"
                                        VerticalAlignment="Center"
                                        Width="32" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  File name  -->
                        <DataGridTemplateColumn
                            Header="File"
                            SortMemberPath="FileName"
                            Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type components:DownloadViewModel}">
                                    <TextBlock
                                        FontSize="14"
                                        Foreground="{DynamicResource MaterialDesignBody}"
                                        Text="{Binding Request.FileName}"
                                        TextTrimming="CharacterEllipsis"
                                        ToolTip="{Binding Request.FileName}"
                                        VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  Status  -->
                        <DataGridTemplateColumn
                            Header="Status"
                            MinWidth="100"
                            SortMemberPath="ProgressOperation.Progress">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type components:DownloadViewModel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!--  Progress  -->
                                        <ProgressBar
                                            Foreground="{DynamicResource SecondaryHueMidBrush}"
                                            Grid.Column="0"
                                            Margin="0,0,6,0"
                                            Maximum="1"
                                            Minimum="0"
                                            Value="{Binding Progress.Current.Fraction, Mode=OneWay}"
                                            Visibility="Collapsed">
                                            <ProgressBar.Style>
                                                <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Started}">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ProgressBar.Style>
                                        </ProgressBar>

                                        <!--  Status  -->
                                        <TextBlock
                                            Grid.Column="1"
                                            TextTrimming="CharacterEllipsis"
                                            VerticalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <!--  Pending  -->
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Initial}">
                                                            <Setter Property="Text" Value="Pending..." />
                                                        </DataTrigger>

                                                        <!--  Downloading  -->
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Started}">
                                                            <Setter Property="Text" Value="{Binding Progress.Current}" />
                                                        </DataTrigger>

                                                        <!--  Successful  -->
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Completed}">
                                                            <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                                                            <Setter Property="Text" Value="✓ Done" />
                                                        </DataTrigger>

                                                        <!--  Canceled  -->
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Canceled}">
                                                            <Setter Property="Foreground" Value="{DynamicResource CanceledBrush}" />
                                                            <Setter Property="Text" Value="✗ Canceled" />
                                                        </DataTrigger>

                                                        <!--  Failed  -->
                                                        <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Failed}">
                                                            <Setter Property="Foreground" Value="{DynamicResource FailedBrush}" />
                                                            <Setter Property="Text" Value="✗ Failed" />
                                                            <Setter Property="ToolTip" Value="{Binding ErrorMessage}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  Buttons  -->
                        <DataGridTemplateColumn MinWidth="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type components:DownloadViewModel}">
                                    <StackPanel
                                        HorizontalAlignment="Right"
                                        Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        s:View.ActionTarget="{Binding}">
                                        <!--  Cancel  -->
                                        <Button
                                            Command="{s:Action Cancel}"
                                            Padding="4,0,4,0"
                                            Style="{DynamicResource MaterialDesignFlatButton}"
                                            ToolTip="Cancel download"
                                            VerticalAlignment="Center"
                                            Visibility="{Binding CanCancel, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                            <materialDesign:PackIcon
                                                Height="24 "
                                                Kind="CloseCircleOutline"
                                                Width="24" />
                                        </Button>

                                        <!--  Restart  -->
                                        <Button
                                            Command="{s:Action Restart}"
                                            Padding="4,0,4,0"
                                            Style="{DynamicResource MaterialDesignFlatButton}"
                                            ToolTip="Restart download"
                                            VerticalAlignment="Center"
                                            Visibility="{Binding CanRestart, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                            <materialDesign:PackIcon
                                                Height="24 "
                                                Kind="Restart"
                                                Width="24" />
                                        </Button>

                                        <!--  Show file  -->
                                        <Button
                                            Command="{s:Action ShowFile}"
                                            Padding="4,0,4,0"
                                            Style="{DynamicResource MaterialDesignFlatButton}"
                                            ToolTip="Navigate to file"
                                            VerticalAlignment="Center"
                                            Visibility="{Binding CanShowFile, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                            <materialDesign:PackIcon
                                                Height="24 "
                                                Kind="FileFindOutline"
                                                Width="24" />
                                        </Button>

                                        <!--  Open file  -->
                                        <Button
                                            Command="{s:Action OpenFile}"
                                            Padding="4,0,4,0"
                                            Style="{DynamicResource MaterialDesignFlatButton}"
                                            ToolTip="Play"
                                            VerticalAlignment="Center"
                                            Visibility="{Binding CanOpenFile, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                                            <materialDesign:PackIcon
                                                Height="24 "
                                                Kind="PlayCircleOutline"
                                                Width="24" />
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <!--  Notifications  -->
                <materialDesign:Snackbar MessageQueue="{Binding Notifications}" />
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>